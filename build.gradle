plugins {
    id 'idea'
    id 'application'
    id 'jacoco'
    id "com.avast.gradle.docker-compose" version "0.10.9"
}

group 'com.deepster.eurovision'
version '1.0.0'
applicationName = 'EuroVisionVoting'
wrapper {
    gradleVersion '6.2'
}

application{
    mainClassName = 'com.deepster.eurovision.Application'
    applicationDefaultJvmArgs = ['--add-opens', 'java.base/java.lang=ALL-UNNAMED']
}

java {
    targetCompatibility = JavaVersion.VERSION_11
    sourceCompatibility = JavaVersion.VERSION_11
}


jar {
    manifest {
        attributes 'Main-Class': 'com.deepster.eurovision.Application'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}



repositories {
    mavenCentral()
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/java')
        }
        resources.srcDir file('src/integrationTest/resources')
    }
}

task integrationTest(type: Test){
    description = 'Run the integration tests.'
    group = 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    shouldRunAfter(test)
}

check.dependsOn integrationTest

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

tasks.withType(Test) {
//    ignoreFailures true
//    failFast true
//    maxParallelForks 3
//    testLogging.showStandardStreams true
    useJUnitPlatform()
}

dockerCompose.isRequiredBy(test)


dockerCompose {
    //    useComposeFiles = ['docker-compose.yml', 'docker-compose.prod.yml']
    captureContainersOutput = false
}


jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/reports/jacocoHtml")
    }
}


dependencies {
    implementation 'com.google.inject:guice:4.2.2:no_aop'
    implementation 'com.sparkjava:spark-core:2.9.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.2.3'
    implementation 'io.lettuce:lettuce-core:5.1.6.RELEASE'
    implementation "com.typesafe:config:1.3.1"
    implementation "org.slf4j:slf4j-api:1.7.30"
    implementation "ch.qos.logback:logback-classic:1.2.3"
    implementation 'org.logback-extensions:logback-ext-loggly:0.1.2'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.5.2'
    testImplementation 'org.mockito:mockito-core:3.2.4'
    testImplementation 'com.github.kstyrc:embedded-redis:0.6'
    integrationTestImplementation 'io.rest-assured:rest-assured:4.2.0'
    integrationTestImplementation 'io.rest-assured:json-path:4.2.0'
    docker 'redis:redis:5-alpine'
    docker 'redis:redis-commander:latest'

}

defaultTasks 'build'